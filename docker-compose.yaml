services:
  mongo1:
    image: mongo:5
    container_name: mongo1
    command: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "localhost,mongo1"]
    restart: always
    ports:
      - 27017:27017
    networks:
      - mongoCluster
    volumes:
      - mongo1-data:/data/db

  mongo2:
    image: mongo:5
    container_name: mongo2
    command: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "localhost,mongo2"]
    restart: always
    ports:
      - 27018:27017
    networks:
      - mongoCluster
    volumes:
      - mongo2-data:/data/db

  mongo3:
    image: mongo:5
    container_name: mongo3
    command: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "localhost,mongo3"]
    restart: always
    ports:
      - 27019:27017
    networks:
      - mongoCluster
    volumes:
      - mongo3-data:/data/db

  flask-predict-app:
    image: ${YOLO5_IMG_NAME}
    container_name: flask-predict-app
    restart: always
    ports:
      - 8081:8081
    volumes:
      - $HOME/.aws:/root/.aws
    environment:
      BUCKET_NAME: ${BUCKET_NAME}
      MONGO_URI: ${MONGO_URI}
    networks:
      - mongoCluster

  polybot:
    image: ${POLYBOT_IMG_NAME}
    container_name: polybot
    restart: always
    ports:
      - 8443:8443
    volumes:
      - $HOME/.aws:/root/.aws
    environment:
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
      TELEGRAM_APP_URL: ${TELEGRAM_APP_URL}
      S3_BUCKET: ${S3_BUCKET}
      YOLO_SERVICE_URL: ${YOLO_SERVICE_URL}
    networks:
      - mongoCluster

networks:
  mongoCluster:
    driver: bridge
volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data: